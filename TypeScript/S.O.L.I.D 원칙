객체지향 설계 원칙 - SOLID

S(SRP-단일 책임 원칙)  *매우중요*
=>클래스는 하나의 책임만 가져야한다.

O(개방 폐쇄 원칙) -> 인터페이스 혹은 상속을 잘 쓰자
=> 클래스의 기본 코드를 변경하지 않고도 기능을 확장할 수 있어야 한다


L(리스코프 치환 원칙)
=> 서브타입은 기반이 되는 슈퍼타입을 대체할 수 있어야한다.
=> 자식클래스는 부모클래스의 기능을 수정하지 않고도 부모 클래스와 호완이 되어야한다.

I(인터페이스 분리 원칙)
=> 클래스는 자신이 사용하지 않는 인터페이스의 영향을 받지 않아야한다.
=> 즉, 해당 클래스에게 무의미한 메소드의 구현을 막자는 의미

D(DIP, 의존성 역전 원칙)
=> 하위 수준 모듈보다 상위 수준 모듈에 의존해야 한다는 의미
