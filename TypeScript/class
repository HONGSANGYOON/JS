객채지향프로그램(oop)

class
=> 객체 지향ㅍ로그래밍의 핵심 구성 요소 중 하나를
=> 객체를 만들기 위한 틀
=> 객체의 성질을 결정

메서드
=> 객체의 성질을 변화시키거나 객체에서 제공하는 기능들을 사용

클래스 정의하기
=> class 키워드 사용하면 된다.

constructor(객체생성 후 한번만 사용)
=> 새성자
=> 개체속성을 초기화 하는것뿐만 아니라 객체가 생성이 될때 꼭 되어야 하는 초기화를 할때 사용한다.

클래스 접근 제한자
=> 클래스는 속성과 메섣드에 접근 제한자를 사용해 접근을 제한한다.

1. public
=> 클래스 위부에서도 접근이 가능한 접근 제한자
=> 접근 ㅈ제한자가 선언이 안되어 있으면 기본적으로 public으로 된다.

2.private
=> 클래스 내부에서만 접근이 가능한 접근제한자
=> 대부분은 private로 접근 제한자를 설정한다.
=> 클래스의 속성을 보거나 편집하고 싶으면 getter/setter 메서드를 준비해 놓아야한다.

3.protected
=> 클래스 내부와 해당 클래스를 상속받은 자식 클래스에서만 접근


= 상속 =
=> 기존의 클래스의 속성과 메서드를 물려받아 새로운 클래스를 정의할 수 있다.
=> 상속을 사용하면 똑같은 코드를 계속 반복적으로 작성할 필요가 없다.
=> 상속을 구현하려면 extends 키워드를 사용하면 된다.
* super키워드는 자식 클래스가 부모클래스를 참조하는데 사용되는 키워드다.

= upcasting & downcasting =
=> 타입을 변환하는 기술(상위타입과 하위타입으로 변환)
=> 타입변환은 대입(=)으로 이루어진다.

as 키워드 : 명시적으로 타입변환을 하는것.


= 추상 클래스 =
=> 자식 클래스들이 강하게 자라는것을 유도하는 부모 클래스가
=> 추상클래스의 목적은 상속을 통해 자식 클래스에서 메서드를 제각각 구현하도록 강제하는 용도
=> abstract 키워드를 사용

= 인터페이스 =
=> 객체가 가져야 하는 속성과 메서드를 정의한다.



