릳덕스 툴킷이란??
-리덕스 구조를 좀 더 쉽게 해주는것
-리덕스 데브툴을 이용하여 좀 더 쉽게 여러상태를 모니터링을 할 수 있다.

yarn add react-redux @reduxjs/toolkit
=> 툴킷 설치 코드

const store = configureStore({
  reducer: { counter: counter, todos: todos },
});
위 예시처럼, 리듀서는 key : value 페어로 이루어진다.

sclice : 
=> 한번 자세히 살펴보면 **큰 차이점은 Action Value와 Action Creator를 이제 직접 생성해주지 않고, Action Value, Action Creator, Reducer가 하나로 합쳐졌다는 점입니다.

import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  number: 0,
};

const counterSlice = createSlice({
  name: "counter",
  initialState,
  reducers: {
    addNumber: (state, action) => {
      state.number = state.number + action.payload;
    },

    minusNumber: (state, action) => {
      state.number = state.number - action.payload;
    },
  },
});

// 액션크리에이터는 컴포넌트에서 사용하기 위해 export 하고
export const { addNumber, minusNumber } = counterSlice.actions;
// reducer 는 configStore에 등록하기 위해 export default 합니다.
export default counterSlice.reducer;


sclice
=>액션크리에이터, 리듀서, 액션벨류 3가지를 한꺼번에 가능하게하는 로직
const 변수명 = createSlice();

const todosSlice = createSlice({
  name: "todos",
  initialState,
  reducers: {
    addTodo: () => {},
    removeTodo: () => {},
    switchTodo: () => { },
    //자동으로 리듀서와 액션크리에이터가 동시에 만들어진다.
  },
});
총 3가지 인자를(3가지 인자가 무엇인지 찾아보기) 갖는다.

리덕스 devtools
